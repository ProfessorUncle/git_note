Github的使用:
1.将本地的ssh公钥 添加到github的seting上 
家目录 cd .gitconfig 编辑文件，里面有github账号和用户名
然后 执行命令 ssh-keygen -t rsa -C '邮箱'
cd .ssh/
cat id_rsa.pub
复制内容，放到github的setting的ssh公钥区即可

2. 将Github的仓库和本地的仓库连接起来
在本地的仓库下运行命令:
git remote add origin git@github.com:yourUsername/仓库名.git
要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git


添加后，远程库的名字是origin，这是Git默认的叫法.
下一步把本地库的所有内容推送到远程库上:
git push -u origin master
把本地库的内容退送到远程，用git push 命令，实际上是把当前分支master推送远程

由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改

3.创建新库时，要勾选Initialize this repository with a README，这样github会自动创建一个readme.md文件
命令git clone 克隆一个本地库:
git clone git@github.com:username/库名.git

4.Git中打标签
git tag name 就可以大一个新标签在分支上
可以用git tag查看所有标签
默认标签是打在最新提交的commit上的，如果想打在以前的版本上
用git log --pretty=oneline 找出序列号
然后git tag name 序列号即可

git show tagname 查看标签信息


命令git push origin <tagname>可以推送一个本地标签；

命令git push origin --tags可以推送全部未推送过的本地标签；

命令git tag -d <tagname>可以删除一个本地标签；

命令git push origin :refs/tags/<tagname>可以删除一个远程标签


##
补充，遇到无法推送的情况
error: 无法推送一些引用到 'https://github.com/***'
提示：更新被拒绝，因为远程版本库包含您本地尚不存在的提交。这通常是因为另外
提示：一个版本库已向该引用进行了推送。再次推送前，您可能需要先整合远程变更

解决方案:1.强行上传 git push -u origin +master
	 2.尽量先同步github上的代码到本地，在上面更改之后再上传
